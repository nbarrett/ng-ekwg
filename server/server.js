"use strict";
const config = require("./lib/config/config.js");
const path = require("path");
const express = require("express");
const favicon = require("serve-favicon");
const logger = require("morgan");
const methodOverride = require("method-override");
const bodyParser = require("body-parser");
const compression = require("compression")
const errorHandler = require("errorhandler");
const passport = require("passport");
const ramblers = require("./lib/ramblers/ramblers");
const mongooseClient = require("./lib/mongo/mongoose-client");
const migration = require("./lib/migration/migration-controller");
const aws = require("./lib/aws/aws");
const database = require("./lib/mongo/database");
const meetup = require("./lib/meetup/meetup");
const instagram = require("./lib/instagram/instagram");
const googleMaps = require("./lib/google-maps/googleMaps");
const mailchimp = require("./lib/mailchimp/mailchimp");
const contentText = require("./lib/mongo/routes/content-text");
const auth = require("./lib/mongo/routes/auth");
const logs = require("./lib/middleware/logs");
const member = require("./lib/mongo/routes/member");
const memberBulkLoadAudit = require("./lib/mongo/routes/member-bulk-load-update");
const memberUpdateAuditRoutes = require("./lib/mongo/routes/member-update-audit");
const memberAuthAuditRoutes = require("./lib/mongo/routes/member-auth-audit");
const ramblersUploadAudit = require("./lib/mongo/routes/ramblers-upload-audit");
const contentMetadata = require("./lib/mongo/routes/content-metadata");
const expenseClaim = require("./lib/mongo/routes/expense-claim");
const configRoutes = require("./lib/mongo/routes/config");
const walkRoutes = require("./lib/mongo/routes/walk");
const debug = require("debug")(config.logNamespace("server"));
const app = express();
app.use(compression())
app.set("port", config.server.listenPort);
app.disable("view cache");
app.use(favicon(path.join(config.server.distFolder, "assets/images/ramblers/favicon.ico")));
app.use(logger(config.env));
app.use(methodOverride());
app.use(bodyParser.json({limit: '50mb'}));
app.use(bodyParser.urlencoded({limit: '50mb', extended: true}));
app.use(passport.initialize());
app.use(passport.session());
app.use("/api/ramblers", ramblers);
app.use("/api/migration", migration);
app.use("/api/aws", aws);
app.use("/api/google-maps", googleMaps);
app.use("/api/instagram", instagram);
app.use("/api/mailchimp", mailchimp);
app.use("/api/meetup", meetup);
app.use("/api/database", database);
app.use("/api/database/auth", auth);
app.use("/api/database/content-text", contentText);
app.use("/api/database/content-metadata", contentMetadata);
app.use("/api/database/expense-claim", expenseClaim);
app.use("/api/database/member", member);
app.use("/api/database/member-bulk-load-audit", memberBulkLoadAudit);
app.use("/api/database/member-auth-audit", memberAuthAuditRoutes);
app.use("/api/database/member-update-audit", memberUpdateAuditRoutes);
app.use("/api/database/ramblers-upload-audit", ramblersUploadAudit);
app.use("/api/database/config", configRoutes);
app.use("/api/database/walks", walkRoutes);
app.use("/api/logs", logs);
app.use("/", express.static(config.server.distFolder));
app.use((req, res, next) => {
  res.sendFile(path.join(config.server.distFolder, "index.html"));
});
if (app.get("env") === "dev") {
  app.use(errorHandler());
}
  mongooseClient.connect();
app.listen(app.get("port"), function () {
  debug("listening on port " + config.server.listenPort);
});
